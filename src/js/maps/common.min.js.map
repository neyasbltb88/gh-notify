{"version":3,"sources":["common.min.js"],"names":["DemoPage","_classCallCheck","this","containers","containers_settings","active_containerName","checkboxes","document","querySelectorAll","container_names","templateLi","querySelector","init","place","disable","active","name","descr","value","container","concat","settings","clean_settings","setting","getCleanContainerSettings","console","destroy","GHNotify","currentLiElem","container_settings_elem","checkbox","checked","textContent","prop","prop_name","prop_val","description","classList","disabled","initContainer","setAttribute","createElement","liClass","createdLi","className","innerHTML","appendChild","e","target","length","log","getContainerSettings","checkContainerRedy","updatePropList","createPropList","_this","forEach","contentReady","changeContainer","bind","activateContainer","demoPage"],"mappings":"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","file":"../common.min.js","sourcesContent":["//  // Создание контейнера вверху слева\r\n//  this.containers.nw = new GHNotify({\r\n//   width: '300px',\r\n//   place: 'nw',\r\n//   container: '.nw_container',\r\n//   new: true\r\n// });\r\n// this.containers.nw.push();\r\n// this.containers.nw.push();\r\n// /////////////////////////////////////\r\n\r\nclass DemoPage {\r\n    constructor() {\r\n        this.containers = {};\r\n        this.containers_settings = {};\r\n        this.active_containerName = '';\r\n        this.checkboxes = document.querySelectorAll('[name=\"place\"]');\r\n        this.container_names = ['nw', 'n', 'ne', 'se', 's', 'sw'];\r\n        this.templateLi = `<div class=\"params\">\r\n    <span class=\"disable tooltipped tooltipped-se\" aria-label=\"Use this option?\">\r\n        <input type=\"checkbox\" checked>\r\n    </span>\r\n    <span class=\"prop_name tooltipped tooltipped-s\" aria-label=\"Property name\"></span>\r\n    <span class=\"prop_val tooltipped tooltipped-s\" contenteditable=\"true\" aria-label=\"Property value\"></span>\r\n</div>\r\n<div class=\"description\"></div>`;\r\n        this.container_settings_elem = document.querySelector('.container_settings_wrap .settings');\r\n        this.push_settings_elem = document.querySelector('.push_settings_wrap .settings');\r\n\r\n\r\n\r\n        // Точка входа\r\n        this.init();\r\n    }\r\n\r\n    getDefaultContainerSettings(place) {\r\n        return {\r\n            place: {\r\n                disable: true,\r\n                active: true,\r\n                name: 'place',\r\n                value: place,\r\n                descr: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Harum quaerat a sapiente modi itaque. Provident vel similique, nesciunt non sed facilis. Minima quos architecto facilis deserunt, exercitationem ducimus sequi qui.'\r\n            },\r\n            width: {\r\n                disable: false,\r\n                active: true,\r\n                name: 'width',\r\n                value: '300px',\r\n                descr: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Harum quaerat a sapiente modi itaque. Provident vel similique, nesciunt non sed facilis. Minima quos architecto facilis deserunt, exercitationem ducimus sequi qui.'\r\n            },\r\n            offsetY: {\r\n                disable: false,\r\n                active: true,\r\n                name: 'offsetY',\r\n                value: 0,\r\n                descr: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Harum quaerat a sapiente modi itaque. Provident vel similique, nesciunt non sed facilis. Minima quos architecto facilis deserunt, exercitationem ducimus sequi qui.'\r\n            },\r\n            offsetX: {\r\n                disable: false,\r\n                active: true,\r\n                name: 'offsetX',\r\n                value: 0,\r\n                descr: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Harum quaerat a sapiente modi itaque. Provident vel similique, nesciunt non sed facilis. Minima quos architecto facilis deserunt, exercitationem ducimus sequi qui.'\r\n            },\r\n            container: {\r\n                disable: true,\r\n                active: true,\r\n                name: 'container',\r\n                value: `.${place}_container`,\r\n                descr: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Harum quaerat a sapiente modi itaque. Provident vel similique, nesciunt non sed facilis. Minima quos architecto facilis deserunt, exercitationem ducimus sequi qui.'\r\n            },\r\n            position: {\r\n                disable: false,\r\n                active: true,\r\n                name: 'position',\r\n                value: 'fixed',\r\n                descr: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Harum quaerat a sapiente modi itaque. Provident vel similique, nesciunt non sed facilis. Minima quos architecto facilis deserunt, exercitationem ducimus sequi qui.'\r\n            },\r\n            parent: {\r\n                disable: true,\r\n                active: false,\r\n                name: 'parent',\r\n                value: '.parent_selector',\r\n                descr: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Harum quaerat a sapiente modi itaque. Provident vel similique, nesciunt non sed facilis. Minima quos architecto facilis deserunt, exercitationem ducimus sequi qui.'\r\n            },\r\n            default: {\r\n                disable: false,\r\n                active: true,\r\n                name: 'default',\r\n                value: 'TEST_2',\r\n                descr: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Harum quaerat a sapiente modi itaque. Provident vel similique, nesciunt non sed facilis. Minima quos architecto facilis deserunt, exercitationem ducimus sequi qui.'\r\n            },\r\n            new: {\r\n                disable: true,\r\n                active: true,\r\n                name: 'new',\r\n                value: true,\r\n                descr: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Harum quaerat a sapiente modi itaque. Provident vel similique, nesciunt non sed facilis. Minima quos architecto facilis deserunt, exercitationem ducimus sequi qui.'\r\n            }\r\n        }\r\n    }\r\n\r\n    getContainerSettings(place) {\r\n        let settings;\r\n        // Если есть уже инициализированные настройки для контейнера\r\n        if (this.containers_settings[place]) {\r\n            settings = this.containers_settings[place];\r\n        } else {\r\n            // Если для этого контейнера еще не проводилась настройка,\r\n            //  достанем настройки из дефолтных\r\n            settings = this.getDefaultContainerSettings(place);\r\n            this.containers_settings[place] = settings;\r\n        }\r\n        // и вернем их\r\n        return settings;\r\n    }\r\n\r\n    // Получить подготовленный объект настроек для инициализации контейнера\r\n    getCleanContainerSettings(settings) {\r\n        let clean_settings = {};\r\n        for (let setting in settings) {\r\n            if (settings[setting].active) {\r\n                clean_settings[setting] = settings[setting].value;\r\n            }\r\n        }\r\n        return clean_settings;\r\n    }\r\n\r\n    initContainer() {\r\n        // Получим настройки для активного контейнера\r\n        let settings = this.containers_settings[this.active_containerName];\r\n        // Подготовим их для инициализации\r\n        settings = this.getCleanContainerSettings(settings);\r\n        console.log(settings);\r\n\r\n        if (this.containers[this.active_containerName]) {\r\n            this.containers[this.active_containerName].destroy();\r\n            delete this.containers[this.active_containerName];\r\n        }\r\n\r\n        this.containers[this.active_containerName] = new GHNotify(settings);\r\n    }\r\n\r\n    updatePropList(settings) {\r\n        for (let prop in settings) {\r\n            let setting = settings[prop];\r\n\r\n            // Получим элемент списка, соответствующий текущей опции\r\n            let currentLiElem = this.container_settings_elem.querySelector(`.${setting.name}`);\r\n            // И заполним данными его составляющие\r\n            let checkbox = currentLiElem.querySelector('[type=\"checkbox\"]');\r\n            checkbox.checked = setting.active;\r\n            let prop_name = currentLiElem.querySelector('.prop_name');\r\n            prop_name.textContent = `${setting.name}:`;\r\n            let prop_val = currentLiElem.querySelector('.prop_val');\r\n            prop_val.textContent = setting.value;\r\n            let description = currentLiElem.querySelector('.description');\r\n            description.innerHTML = setting.descr;\r\n\r\n            // Заблокируем элемент, если нужного\r\n            if (setting.disable) {\r\n                currentLiElem.classList.add('disabled');\r\n                checkbox.disabled = true;\r\n                prop_val.removeAttribute('contenteditable');\r\n                // Или разблокируем, но это скорее всего не понадобится\r\n            } else {\r\n                currentLiElem.classList.remove('disabled');\r\n                checkbox.disabled = false;\r\n                prop_val.setAttribute('contenteditable', true);\r\n            }\r\n            // console.log(currentLiElem);\r\n        }\r\n        this.initContainer();\r\n    }\r\n\r\n    createPropList(settings) {\r\n        // Пройдемся циклом по настройкам контейнера\r\n        for (let prop in settings) {\r\n            // Для каждой опции будем создавать элемент списка\r\n            let setting = settings[prop];\r\n            let createdLi = document.createElement('li');\r\n            let liClass = setting.name;\r\n            createdLi.className = liClass;\r\n            createdLi.innerHTML = this.templateLi;\r\n            // Добавляем созданные элементы в блок настроек\r\n            this.container_settings_elem.appendChild(createdLi);\r\n        }\r\n        // После создания пустых элементов списка опций, заполним их\r\n        this.updatePropList(settings);\r\n    }\r\n\r\n    // Переключает настраиваемый контейнер\r\n    changeContainer(e) {\r\n        let place = e.target.value;\r\n        this.activateContainer(place);\r\n    }\r\n\r\n    // Проверка на то, содержит ли блок настроек элементы опций\r\n    checkContainerRedy() {\r\n        let settingsList = this.container_settings_elem.querySelectorAll('li');\r\n        if (settingsList.length > 0) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    // Активирует настройки для выбранного контейнера\r\n    activateContainer(place) {\r\n        this.active_containerName = place;\r\n        console.log(this.active_containerName);\r\n        // Получаем настройки контейнера\r\n        let settings = this.getContainerSettings(place);\r\n        // Проверка на предмет инициализации блока с настройками контейнера\r\n        let contentReady = this.checkContainerRedy();\r\n        if (contentReady) {\r\n            // Если блок с настройками заполнен, обновим его\r\n            this.updatePropList(settings);\r\n        } else {\r\n            // Если не заполнен, создадим его внутреннюю структуру\r\n            this.createPropList(settings);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    // Метод запуска\r\n    init() {\r\n        // Вешаем на чекбоксы обработчики\r\n        this.checkboxes.forEach(checkbox => {\r\n            checkbox.addEventListener('change', this.changeContainer.bind(this));\r\n            // Ищем активный чекбокс\r\n            if (checkbox.checked) {\r\n                // Запускаем активацию блока с настройками нужного контейнера \r\n                this.activateContainer(checkbox.value);\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n}\r\n\r\nvar demoPage = new DemoPage();"]}